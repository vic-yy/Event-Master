Inicializar o Projeto Node.js
npm init -y
Instalar o TypeScript e as Dependências Necessárias
npm install typescript ts-node @types/node --save-dev
Configurar o TypeScript
npx tsc --init
Criar Estrutura de Diretórios
nome-do-projeto/
│
├── src/
│   └── index.ts  (arquivo principal)
│
├── tsconfig.json
└── package.json
mkdir src
touch src/index.ts

Testando:
console.log("Hello, TypeScript + Node.js!");


"scripts": {
  "start": "ts-node src/index.ts",
  "build": "tsc",
  "dev": "ts-node-dev --respawn src/index.ts"
}

start: Executa o código TypeScript usando ts-node.
build: Compila os arquivos TypeScript para JavaScript na pasta dist.
dev: Usa ts-node-dev para executar o projeto em modo de desenvolvimento, reiniciando automaticamente a cada mudança (você pode instalar o ts-node-dev com npm install ts-node-dev --save-dev).


bibliotecas a instalar:
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.14.10",
    "@types/nodemailer": "^6.4.15",
    "@types/uuid": "^10.0.0",
    "jest": "^29.7.0",
    "jest-mock-extended": "^3.0.7",
    "prisma": "^5.18.0",
    "ts-jest": "^29.2.2",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.5.3",
  "@prisma/client": "^5.18.0",
    "@types/cookie-parser": "^1.4.7",
    "@types/jsonwebtoken": "^9.0.6",
    "bcrypt": "^5.1.1",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "jsonwebtoken": "^9.0.2",
    "node": "^18.20.4",
    "nodemailer": "^6.9.15",

npm install prisma --save-dev
npm install @prisma/client

inicializando prisma:
npx prisma init


criar o .env

