generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId          Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  password        String
  role            String
  token           String?
  tokenExpiration DateTime?
  participants    	Participant[]
}

model Event {
  eventId               Int      @id @default(autoincrement())
  title                 String
  description           String
  create_at             DateTime @default(now())
  location              String
  date                  DateTime  
  participants    	Participant[]
}

model Participant {
  participantId   Int       @id @default(autoincrement())
  userId          Int
  eventId         Int
  role            String

  user            User         @relation(fields: [userId], references: [userId], onDelete: Cascade)
  event           Event        @relation(fields: [eventId], references: [eventId], onDelete: Cascade)
  @@unique([userId, eventId])
}

model Group {
  groupId      Int      @id @default(autoincrement())
  title        String
  description  String
}

model User_Group {
  user_groupId  Int     @id @default(autoincrement())
  userId        Int
  groupId       Int
  role          String

  user         User           @relation(fields: [userId], references: [userId], onDelete: Cascade)
  group        Group          @relation(fields: [groupId], references: [groupId], onDelete: Cascade)
  @@unique([userId, groupId])
}

model Event_Group {
  event_groupId  Int     @id @default(autoincrement())
  eventId        Int
  groupId        Int
  role           String

  event        Event          @relation(fields: [eventId], references: [eventId], onDelete: Cascade)
  group        Group          @relation(fields: [groupId], references: [groupId], onDelete: Cascade)
  @@unique([userId, groupId])
}
